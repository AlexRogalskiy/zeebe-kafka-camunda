version: '2.2'
services:
  zookeeper:
    container_name: zeebe-zookeeper
    image: zookeeper:3.4
    environment:
      - SERVER_PORT=2181
    ports:
      - "127.0.0.1:2181:2181"
    volumes:
      - ./data/zookeeper:/data
      - ./data/zookeeperlog:/datalog
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok" ]
      interval: 30s
      timeout: 10s
      retries: 5
  kafka:
    container_name: zeebe-kafka
    image: wurstmeister/kafka:2.11-1.1.1
    restart: unless-stopped
    ports:
      - "127.0.0.1:9092:9092"
    environment:
      - SERVER_PORT=9092
      - KAFKA_BROKER_ID=321
      - KAFKA_RESERVED_BROKER_MAX_ID=1000
      - KAFKA_ADVERTISED_HOST_NAME=127.0.0.1
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_JMX_PORT=6123
      - KAFKA_MESSAGE_MAX_BYTES=2000000
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
    volumes:
      - ./data/kafka:/kafka
      - ./logs/kafka:/opt/kafka_2.11-2.0.1/logs
    healthcheck:
      test: [ "CMD-SHELL", "echo '00 00 00 0E 0003 0003 00 00 00 00 FF FF 00 00 00 00' | xxd -r -p | nc localhost 9092 -w 1 | xxd" ]
      interval: 30s
      timeout: 10s
      retries: 3
  zeebe:
    container_name: zeebe
    image: camunda/zeebe:0.14.0
    restart: unless-stopped
    ports:
      # Client API
      - "127.0.0.1:26500:26500"
      # Management API for broker to broker communcation
      - "127.0.0.1:26502:26502"
      # Replication API for broker to broker replication
      - "127.0.0.1:26503:26503"
    environment:
      - SERVER_PORT=26500
      - ZEEBE_LOG_LEVEL=info
      - "SIMPLE_MONITOR_EXPORTER_JDBC_URL=jdbc:mariadb://monitor-mysql:3306/zeebe"
    volumes:
      - ./data/zeebe:/usr/local/zeebe/data
      - ./data/zeebe-metrics:/usr/local/zeebe/metrics
      - ./logs/zeebe:/usr/local/zeebe/logs
      - ./zeebe.cfg.toml:/usr/local/zeebe/conf/zeebe.cfg.toml:ro
      - ./wait-for:/usr/local/wait-for:ro
      - ./lib/mariadb-java-client-2.3.0.jar:/usr/local/zeebe/lib/mariadb-java-client-2.3.0.jar:ro
      - ./zeebe-simple-monitor/exporter/target/zeebe-simple-monitor-exporter-0.11.0-SNAPSHOT.jar:/usr/local/zeebe/lib/zeebe-simple-monitor-exporter.jar:ro
    links:
      - elastic
      - monitor-mysql
    entrypoint:
      - /usr/local/wait-for
      - "monitor-mysql:3306"
      - "--"
      - "/usr/local/wait-for elastic:9200 -- /sbin/tini -- /usr/local/bin/startup.sh"
# FIXME: Zeebe uses HTTP/2.0 so need to create binary line to check HTTP/2.0 protocol
#    healthcheck:
#      test: [ "CMD-SHELL", "echo INFO | nc localhost 26500" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
  monitor-mysql:
    container_name: zeebe-mysql
    image: mariadb:10.2
    restart: unless-stopped
    environment:
      - SERVER_PORT=3306
      - MYSQL_DATABASE=zeebe
      - MYSQL_USER=zeebe
      - MYSQL_PASSWORD=123
      - MYSQL_ROOT_PASSWORD=123
    ports:
      - "127.0.0.1:8106:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./mariadb.conf:/etc/mysql/conf.d/zeebe.cnf
  monitor:
    container_name: zeebe-mon
    image: camunda/zeebe-simple-monitor:0.10.0
    restart: unless-stopped
    environment:
      - SERVER_PORT=8080
    ports:
      - "127.0.0.1:8182:8080"
    volumes:
      - ./data/zeebe/monitor:/data
      - ./zeebe-simple-monitor/app/target/zeebe-simple-monitor-app-0.11.0-SNAPSHOT.jar:/usr/local/zeebe-simple-monitor.jar
      - ./wait-for:/usr/local/wait-for:ro
      - ./simple-monitor.properties:/usr/local/simple-monitor.properties:ro
    links:
      - monitor-mysql
    entrypoint:
      - /usr/local/wait-for
      - "zeebe:26500"
      - "--"
      - java
      - "-jar"
      - "/usr/local/zeebe-simple-monitor.jar"
      - "--debug"
      - "--spring.config.location=classpath:/application.properties,file:/usr/local/simple-monitor.properties"
    healthcheck:
      test: [ "CMD-SHELL", "echo INFO | nc localhost 8080" ]
      interval: 30s
      timeout: 10s
      retries: 5
  elastic:
    image: elasticsearch:6.5.1
    container_name: zeebe-elastic
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - SERVER_PORT=9200
      - cluster.name=zeebe
      # This enabled development mode https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
      # which makes bootstrap checks as warnings
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    volumes:
      - ./data/elastic:/usr/share/elasticsearch/data
      - ./logs/elastic:/usr/share/elasticsearch/logs
    ports:
      - "127.0.0.1:9200:9200"
    command: elasticsearch -Ediscovery.type=single-node -Ecluster.name=zeebe -Ehttp.cors.allow-origin="*" -Ehttp.cors.enabled=true -Ehttp.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization -Ehttp.cors.allow-credentials=true
    healthcheck:
      test: [ "CMD-SHELL", "echo INFO | nc localhost 9200" ]
      interval: 30s
      timeout: 10s
      retries: 5
  launchpad:
    image: nginx
    container_name: zeebe-nginx
    environment:
      - SERVER_PORT=8080
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./launchpad:/var/www:ro
    ports:
      - "127.0.0.1:8181:8080"
  kibana:
    image: kibana:6.5.1
    container_name: zeebe-kibana
    environment:
      - SERVER_PORT=5601
      - ELASTICSEARCH_URL=http://elastic:9200
    ports:
      - "127.0.0.1:8184:5601"
  metabase:
    image: metabase/metabase:v0.31.2
    container_name: zeebe-metabase
    environment:
      - MB_DB_TYPE=h2
      - MB_DB_FILE=/data/metabase.h2.db
      - MB_JETTY_PORT=3000
      - JAVA_TIMEZONE=EEST
    volumes:
      - ./data/metabase:/data
    ports:
      - "127.0.0.1:8183:3000"

